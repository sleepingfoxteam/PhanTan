//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TUIBANK_WEBAPP.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TUIBANKEntities : DbContext
    {
        public TUIBANKEntities()
            : base("name=TUIBANKEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<View_Customer_Account> View_Customer_Account { get; set; }
    
        public virtual int sp_add_Account(string customer, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<double> interest, Nullable<int> period, Nullable<int> balance, string branch)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var interestParameter = interest.HasValue ?
                new ObjectParameter("interest", interest) :
                new ObjectParameter("interest", typeof(double));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(int));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(int));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_Account", customerParameter, startdateParameter, enddateParameter, interestParameter, periodParameter, balanceParameter, branchParameter);
        }
    
        public virtual int sp_add_Customer(string fullnane, Nullable<System.DateTime> birthday, string address, string phone, string branch, string pid)
        {
            var fullnaneParameter = fullnane != null ?
                new ObjectParameter("fullnane", fullnane) :
                new ObjectParameter("fullnane", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var pidParameter = pid != null ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_Customer", fullnaneParameter, birthdayParameter, addressParameter, phoneParameter, branchParameter, pidParameter);
        }
    
        public virtual int sp_add_Staff(string fullname, Nullable<System.DateTime> birthday, string address, string pid, string phone, string branch)
        {
            var fullnameParameter = fullname != null ?
                new ObjectParameter("fullname", fullname) :
                new ObjectParameter("fullname", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var pidParameter = pid != null ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_Staff", fullnameParameter, birthdayParameter, addressParameter, pidParameter, phoneParameter, branchParameter);
        }
    
        public virtual int sp_delete_Account(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_Account", idParameter);
        }
    
        public virtual int sp_delete_Customer(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_Customer", idParameter);
        }
    
        public virtual int sp_delete_staff(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_staff", idParameter);
        }
    
        public virtual int sp_send_money(string sourceaccount, string destinationaccount, Nullable<int> money)
        {
            var sourceaccountParameter = sourceaccount != null ?
                new ObjectParameter("sourceaccount", sourceaccount) :
                new ObjectParameter("sourceaccount", typeof(string));
    
            var destinationaccountParameter = destinationaccount != null ?
                new ObjectParameter("destinationaccount", destinationaccount) :
                new ObjectParameter("destinationaccount", typeof(string));
    
            var moneyParameter = money.HasValue ?
                new ObjectParameter("money", money) :
                new ObjectParameter("money", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_send_money", sourceaccountParameter, destinationaccountParameter, moneyParameter);
        }
    
        public virtual int sp_update_Account(string id, Nullable<int> period, Nullable<double> interest, Nullable<int> balance, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(int));
    
            var interestParameter = interest.HasValue ?
                new ObjectParameter("interest", interest) :
                new ObjectParameter("interest", typeof(double));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_Account", idParameter, periodParameter, interestParameter, balanceParameter, startdateParameter, enddateParameter);
        }
    
        public virtual int sp_update_Account_balance(string id, Nullable<int> balance)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_Account_balance", idParameter, balanceParameter);
        }
    
        public virtual int sp_update_Customer(string id, string fullname, Nullable<System.DateTime> birthday, string address, string phone)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("fullname", fullname) :
                new ObjectParameter("fullname", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_Customer", idParameter, fullnameParameter, birthdayParameter, addressParameter, phoneParameter);
        }
    
        public virtual int sp_update_Staff(string id, string fullname, Nullable<System.DateTime> birthday, string address, string pid, string phone)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("fullname", fullname) :
                new ObjectParameter("fullname", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var pidParameter = pid != null ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_Staff", idParameter, fullnameParameter, birthdayParameter, addressParameter, pidParameter, phoneParameter);
        }
    
        public virtual ObjectResult<sp_find_account_info_Result> sp_find_account_info(string accountnumber)
        {
            var accountnumberParameter = accountnumber != null ?
                new ObjectParameter("accountnumber", accountnumber) :
                new ObjectParameter("accountnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_find_account_info_Result>("sp_find_account_info", accountnumberParameter);
        }
    
        public virtual int sp_get_balance(string accountnumber)
        {
            var accountnumberParameter = accountnumber != null ?
                new ObjectParameter("accountnumber", accountnumber) :
                new ObjectParameter("accountnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_get_balance", accountnumberParameter);
        }
    }
}
